import { setLang } from "@/utils/mande"

export const i18nText = {
  zh: {
    unknownError: '未知错误',
    projectSetting: '项目设置',
    download: '下载',
    imageError: '图片上传失败',
    SwitchDisplayMode: '切换展示模式',
    SwitchMaterialPanel: '切换物料栏',
    SwitchConfigPanel: '切换设置栏',
    location: '重新定位',
    undo: '撤销',
    redo: '重做',
    delete: '删除',
    copyComponent: '复制当前组件',
    saveProject: '保存项目',
    saveMaterial: '保存组件',
    switchDevice: '切换设备模式',
    collapseAll: '折叠全部配置项',
    switchSection: '切换到指定 Section',
    nextSection: '下一个 Section',
    prevSection: '上一个 Section',
    nextComponent: '切换到下一个同级组件',
    prevComponent: '切换到上一个同级组件',
    parentComponent: '切换到父级组件',
    childrenComponent: '切换到子级组件',
    switchShortcut: '快捷键展示',
    noSectionTip: '使用 Component 前需要先添加 Section',
    deleteConfirm: '确定删除 {0} 吗？',
    deleteSuccess: '删除成功',
    notGroup: '未分组',
    project: '项目',
    template: '模板',
    section: '章节',
    component: '组件',
    edit: '编辑',
    noDataPlaceholder: '点击左侧「+」号，点击或拖拽 Section 组件添加内容',
    prevNode: '上一个组件',
    nextNode: '下一个组件',
    parentNode: '父组件',
    childrenNode: '子组件',
    nameValidTip: '名字不能使用特殊字符',
    nameExistTip: '名称已存在',
    layers: '图层',
    ungroup: '解除分组',
    hidden: '隐藏',
    visible: '显示',
    save: '保存',
    copy: '复制',
    unlink: 'Unlink with',
    unlinkSelf: 'Self-Unlink',
    unlinkAll: 'Includes Children',
    saveOf: '保存为',
    signOutTip: '退出登录后你的数据可能会丢失',
    signOutTipTitle: '确定退出登录吗',
    routerDataTip: '你的数据仍未保存，确定跳转吗',
    headerWidth: '宽度',
    headerHeight: '高度',
    desktop: '桌面端',
    mobile: '移动端',
    bothClient: '桌面&移动端',
    editMode: '编辑模式',
    dragMode: '拖拽模式',
    previewMode: '预览模式',
    simulator: '模拟器',
    zoom: '缩放',
    mediaFontSize: 'Media Font Size',
    profile: '个人页面',
    signOut: '退出登录',
    signIn: '登录',
    layout: 'Layout',
    size: 'Size',
    spacing: 'Spacing',
    border: 'Border',
    font: 'Font',
    background: 'Background',
    container: 'Container',
    basic: 'Basic',
    position: 'Position',
    event: 'Event',
    animation: 'Animation',
    effect: 'Effect',
    custom: 'Custom',
    notCover: '未设置封面',
    nameRequired: '名称不能为空',
    saveSuccess: '保存成功',
    name: '名称',
    nameEn: '名称(英文)',
    category: '类别',
    categoryEn: '类别(英文)',
    moduleSwitch: '封装',
    projectNameRequired: '项目名称不能为空',
    cover: '封面图',
    ok: '确定',
    cancel: '取消',
    margin: 'Margin',
    padding: 'Padding',
    width: 'Width',
    height: 'Height',
    minWidth: 'Min Width',
    maxWidth: 'Max Width',
    minHeight: 'Min Height',
    maxHeight: 'Max Height',
    static: 'Static',
    absolute: 'Absolute',
    fixed: 'Fixed',
    direction: 'Direction',
    fixedTip: '使用 Fixed 时请确保你的元素置于最顶层容器中',
    alwaysCenter: 'Always Center',
    all: 'All',
    left: 'Left',
    right: 'Right',
    top: 'Top',
    bottom: 'Bottom',
    lock: 'Lock',
    zIndex: 'Z-Index',
    justifyStart: 'Start',
    justifyCenter: 'Center',
    justifyEnd: 'End',
    justifySpaceAround: 'Space Around',
    justifySpaceBetween: 'Space Between',
    justifySpaceEvenly: 'Space Evenly',
    alignStart: 'Start',
    alignCenter: 'Center',
    alignEnd: 'End',
    alignStretch: 'Stretch',
    alignBaseline: 'Baseline',
    row: 'Row',
    column: 'Column',
    mainAxisAlign: 'Main-Axis Align',
    crossAxisAlign: 'Cross-Axis Align',
    fontSize: 'Font Size',
    lineHeight: 'Line Height',
    fontWeight: 'Font Weight',
    textShadow: 'Text Shadow',
    fontFamily: 'Font Family',
    eventTriggerType: 'Trigger Type',
    eventTap: 'Tap',
    eventMouseDown: 'Mouse Down',
    eventTouchStart: 'Touch Start',
    link: 'Link',
    function: 'Function',
    linkPlaceholder: 'Enter a link here',
    functionPlaceholder: 'Can use `event` to get the event',
    stopPropagation: 'Stop Propagation',
    openNewTab: 'Open in New Tab',
    hover: 'Hover',
    active: 'Active',
    ease: 'Ease',
    easeIn: 'Ease In',
    easeOut: 'Ease Out',
    easeInOut: 'Ease In Out',
    linear: 'Linear',
    chooseAStyle: 'Choose a style',
    target: 'Target',
    style: 'Style',
    duration: 'Duration',
    timing: 'Timing',
    timingCode: 'Timing Code',
    action: 'Action',
    addEffect: 'Add Effect',
    opacity: 'Opacity',
    overflow: 'Overflow',
    scroll: 'Scroll',
    auto: 'Auto',
    cursor: 'Cursor',
    default: 'Default',
    pointer: 'Pointer',
    move: 'Move',
    text: 'Text',
    wait: 'Wait',
    help: 'Help',
    notAllowed: 'Not Allowed',
    shadow: 'Shadow',
    customShadow: 'Custom Shadow',
    borderWidth: 'Border Width',
    borderColor: 'Border Color',
    borderStyle: 'Border Style',
    cornerRadius: 'Corner Radius',
    preview: 'Preview',
    textEmptyTip: 'Text nodes will be automatically removed when empty.',
    imgSrc: 'Image Source',
    objectFit: 'Object Fit',
    objectFitContain: 'Contain',
    objectFitCover: 'Cover',
    objectFitFill: 'Fill',
    objectFitNone: 'None',
    objectFitScaleDown: 'Scale Down',
    iconTip: '默认使用第三方 CDN 加载图标，不保证稳定性。图标使用的是 FontAwesome，更多图标查阅：<a href="https://fontawesome.com/v4/icons/" target="_blank">https://fontawesome.com/v4/icons/</a>',
    iconName: 'Name',
    iconSize: 'Size',
    iconColor: 'Color',
    prefixClass: 'Prefix Class',
    extraClass: 'Extra Class',
    cssLink: 'CSS Link',
    backgroundTypeNone: 'None',
    backgroundTypeColor: 'Color',
    backgroundTypeImage: 'Image',
    backgroundTypeGradient: 'Gradient',
    backgroundColor: 'Background Color',
    backgroundLink: 'Image Source',
    backgroundSize: 'Background Size',
    backgroundSizeCover: 'Cover',
    backgroundSizeContain: 'Contain',
    backgroundSizeAuto: 'Auto',
    backgroundPosition: 'Background Position',
    backgroundRepeat: 'Background Repeat',
    backgroundRepeatRepeat: 'Repeat',
    backgroundRepeatRepeatX: 'Repeat-X',
    backgroundRepeatRepeatY: 'Repeat-Y',
    backgroundRepeatNoRepeat: 'None',
    fixedBackground: 'Fixed Background',
    angle: 'Angle',
    colorIndex: 'Color {0}',
    addColor: 'Add Color',
    fade: 'Fade',
    slideUp: 'Slide Up',
    slideDown: 'Slide Down',
    slideLeft: 'Slide Left',
    slideRight: 'Slide Right',
    zoomIn: 'Zoom In',
    zoomOut: 'Zoom Out',
    rotateX: 'Rotate X',
    rotateY: 'Rotate Y',
    animationTriggerHover: 'Hover',
    animationTriggerClick: 'Click',
    animationTriggerScrollIntoView: 'Scroll Into View',
    animationTriggerAlways: 'Always',
    animationFillModeForwards: 'Forwards',
    animationFillModeBackwards: 'Backwards',
    animationFillModeBoth: 'Both',
    animationFillModeNone: 'None',
    animationDirectionNormal: 'Normal',
    animationDirectionReverse: 'Reverse',
    animationDirectionAlternate: 'Alternate',
    animationDirectionAlternateReverse: 'Alternate Reverse',
    animationTip: '只可在 Preview 模式下能预览动画效果',
    animationOffset: 'Offset(%)',
    delay: 'Delay',
    fillMode: 'Fill Mode',
    addAnimation: 'Add Animation',
    upload: 'Upload',
    imageLoadError: '图片加载失败',
    recentColor: 'Recent Color',
    colorVariable: 'Variable',
    saveVariable: 'Save Variable',
    pageTitle: '网站标题',
    pageDescription: '网站标题',
    pageFavicon: 'Favicon',
    rootFontSize: 'Global Font Size',
    fontFaceName: 'Name',
    fontFaceSrc: 'Source',
    fontFaceStyle: 'Style',
    fontFaceWeight: 'Weight',
    fontFaceLink: 'Link',
    addFontFace: 'Add FontFace',
    colorVariableName: 'Name',
    colorVariableColor: 'Color',
    redirectLoading: '正在重定向中...',
    pageNotFound: 'Page Not Found',
    backToHome: 'Back to Home',
    createTemplateTip: '是否使用该模板创建新项目',
    newProject: 'New Project',
    notSaveDataTip: '你有上次编辑仍未保存的数据，是否恢复？',
    pageGlobalSetting: '页面设置',
    fontSetting: '字体设置',
    shortcut: '快捷键',
    material: 'Material',
  },
  en: {
    unknownError: 'Unknown Error',
    projectSetting: 'Project Setting',
    download: 'Download',
    imageError: 'Image Upload Failure',
    SwitchDisplayMode: 'Switch Display Mode',
    SwitchMaterialPanel: 'Collapse Material Panel',
    SwitchConfigPanel: 'Collapse Config Panel',
    location: 'Location',
    undo: 'Undo',
    redo: 'Redo',
    delete: 'Delete',
    copyComponent: 'Copy Component',
    saveProject: 'Save Project',
    saveMaterial: 'Save as Material',
    switchDevice: 'Switch Device',
    collapseAll: 'Collapse All',
    switchSection: 'Switch Section',
    nextSection: 'Next Section',
    prevSection: 'Prev Section',
    nextComponent: 'Next Node',
    prevComponent: 'Prev Node',
    parentComponent: 'Parent Node',
    childrenComponent: 'Children Node',
    switchShortcut: 'Shortcut',
    noSectionTip: 'Section needs to be added before using Component',
    deleteConfirm: 'Sure to delete {0}?',
    deleteSuccess: 'Deleted successfully',
    notGroup: 'Not Grouped',
    project: 'Project',
    template: 'Template',
    section: 'Section',
    component: 'Component',
    edit: 'Edit',
    noDataPlaceholder: 'Click on the "+" sign to add Section',
    prevNode: 'Prev Node',
    nextNode: 'Next Node',
    parentNode: 'Parent Node',
    childrenNode: 'Children Node',
    nameValidTip: 'No special characters in the name',
    nameExistTip: 'Name already exists',
    layers: 'Layers',
    ungroup: 'Ungroup',
    hidden: 'Hidden',
    visible: 'Visible',
    save: 'Save',
    copy: 'Copy',
    unlink: 'Unlink with',
    unlinkSelf: 'Self-Unlink',
    unlinkAll: 'Includes Children',
    saveOf: 'Save as',
    signOutTip: 'Data may be lost after sign out',
    signOutTipTitle: 'Sure to log out?',
    routerDataTip: 'Your data is still not saved, sure to leave this page?',
    headerWidth: 'Width',
    headerHeight: 'Height',
    desktop: 'Desktop',
    mobile: 'Mobile',
    bothClient: 'Desktop & Mobile',
    editMode: 'Edit Mode',
    dragMode: 'Drag Mode',
    previewMode: 'Preview Mode',
    simulator: 'Simulator',
    zoom: 'Zoom',
    mediaFontSize: 'Media Font Size',
    profile: 'Profile',
    signOut: 'Sign Out',
    signIn: 'Sign In',
    layout: 'Layout',
    size: 'Size',
    spacing: 'Spacing',
    border: 'Border',
    font: 'Font',
    background: 'Background',
    container: 'Container',
    basic: 'Basic',
    position: 'Position',
    event: 'Event',
    animation: 'Animation',
    effect: 'Effect',
    custom: 'Custom',
    notCover: 'Not Cover',
    nameRequired: 'Name cannot be empty',
    saveSuccess: 'Saved successfully',
    name: 'Name',
    nameEn: 'Name(En)',
    category: 'Category',
    categoryEn: 'Category(En)',
    moduleSwitch: 'Module',
    projectNameRequired: 'Project name cannot be empty',
    cover: 'Cover',
    ok: 'OK',
    cancel: 'Cancel',
    margin: 'Margin',
    padding: 'Padding',
    width: 'Width',
    height: 'Height',
    minWidth: 'Min Width',
    maxWidth: 'Max Width',
    minHeight: 'Min Height',
    maxHeight: 'Max Height',
    static: 'Static',
    absolute: 'Absolute',
    fixed: 'Fixed',
    direction: 'Direction',
    fixedTip: 'When using Fixed, make sure your component is in the topmost section',
    alwaysCenter: 'Always Center',
    all: 'All',
    left: 'Left',
    right: 'Right',
    top: 'Top',
    bottom: 'Bottom',
    lock: 'Lock',
    zIndex: 'Z-Index',
    justifyStart: 'Start',
    justifyCenter: 'Center',
    justifyEnd: 'End',
    justifySpaceAround: 'Space Around',
    justifySpaceBetween: 'Space Between',
    justifySpaceEvenly: 'Space Evenly',
    alignStart: 'Start',
    alignCenter: 'Center',
    alignEnd: 'End',
    alignStretch: 'Stretch',
    alignBaseline: 'Baseline',
    row: 'Row',
    column: 'Column',
    mainAxisAlign: 'Main-Axis Align',
    crossAxisAlign: 'Cross-Axis Align',
    fontSize: 'Font Size',
    lineHeight: 'Line Height',
    fontWeight: 'Font Weight',
    textShadow: 'Text Shadow',
    fontFamily: 'Font Family',
    eventTriggerType: 'Trigger Type',
    eventTap: 'Tap',
    eventMouseDown: 'Mouse Down',
    eventTouchStart: 'Touch Start',
    link: 'Link',
    function: 'Function',
    linkPlaceholder: 'Enter a link here',
    functionPlaceholder: 'Can use `event` to get the event',
    stopPropagation: 'Stop Propagation',
    openNewTab: 'Open in New Tab',
    hover: 'Hover',
    active: 'Active',
    ease: 'Ease',
    easeIn: 'Ease In',
    easeOut: 'Ease Out',
    easeInOut: 'Ease In Out',
    linear: 'Linear',
    chooseAStyle: 'Choose a style',
    target: 'Target',
    style: 'Style',
    duration: 'Duration',
    timing: 'Timing',
    timingCode: 'Timing Code',
    action: 'Action',
    addEffect: 'Add Effect',
    opacity: 'Opacity',
    overflow: 'Overflow',
    scroll: 'Scroll',
    auto: 'Auto',
    cursor: 'Cursor',
    default: 'Default',
    pointer: 'Pointer',
    move: 'Move',
    text: 'Text',
    wait: 'Wait',
    help: 'Help',
    notAllowed: 'Not Allowed',
    shadow: 'Shadow',
    customShadow: 'Custom Shadow',
    borderWidth: 'Border Width',
    borderColor: 'Border Color',
    borderStyle: 'Border Style',
    cornerRadius: 'Corner Radius',
    preview: 'Preview',
    textEmptyTip: 'Text nodes will be automatically removed when empty.',
    imgSrc: 'Image Source',
    objectFit: 'Object Fit',
    objectFitContain: 'Contain',
    objectFitCover: 'Cover',
    objectFitFill: 'Fill',
    objectFitNone: 'None',
    objectFitScaleDown: 'Scale Down',
    iconTip: 'Icons are loaded by default using a third party CDN. The default icon is FontAwesome, for more icons see.：<a href="https://fontawesome.com/v4/icons/" target="_blank">https://fontawesome.com/v4/icons/</a>',
    iconName: 'Name',
    iconSize: 'Size',
    iconColor: 'Color',
    prefixClass: 'Prefix Class',
    extraClass: 'Extra Class',
    cssLink: 'CSS Link',
    backgroundTypeNone: 'None',
    backgroundTypeColor: 'Color',
    backgroundTypeImage: 'Image',
    backgroundTypeGradient: 'Gradient',
    backgroundColor: 'Background Color',
    backgroundLink: 'Image Source',
    backgroundSize: 'Background Size',
    backgroundSizeCover: 'Cover',
    backgroundSizeContain: 'Contain',
    backgroundSizeAuto: 'Auto',
    backgroundPosition: 'Background Position',
    backgroundRepeat: 'Background Repeat',
    backgroundRepeatRepeat: 'Repeat',
    backgroundRepeatRepeatX: 'Repeat-X',
    backgroundRepeatRepeatY: 'Repeat-Y',
    backgroundRepeatNoRepeat: 'None',
    fixedBackground: 'Fixed Background',
    angle: 'Angle',
    colorIndex: 'Color {0}',
    addColor: 'Add Color',
    fade: 'Fade',
    slideUp: 'Slide Up',
    slideDown: 'Slide Down',
    slideLeft: 'Slide Left',
    slideRight: 'Slide Right',
    zoomIn: 'Zoom In',
    zoomOut: 'Zoom Out',
    rotateX: 'Rotate X',
    rotateY: 'Rotate Y',
    animationTriggerHover: 'Hover',
    animationTriggerClick: 'Click',
    animationTriggerScrollIntoView: 'Scroll Into View',
    animationTriggerAlways: 'Always',
    animationFillModeForwards: 'Forwards',
    animationFillModeBackwards: 'Backwards',
    animationFillModeBoth: 'Both',
    animationFillModeNone: 'None',
    animationDirectionNormal: 'Normal',
    animationDirectionReverse: 'Reverse',
    animationDirectionAlternate: 'Alternate',
    animationDirectionAlternateReverse: 'Alternate Reverse',
    animationTip: 'Animations can only be previewed in Preview Mode',
    animationOffset: 'Offset(%)',
    delay: 'Delay',
    fillMode: 'Fill Mode',
    addAnimation: 'Add Animation',
    upload: 'Upload',
    imageLoadError: 'Image failed to load',
    recentColor: 'Recent Color',
    colorVariable: 'Variable',
    saveVariable: 'Save Variable',
    pageTitle: 'Site title',
    pageDescription: 'Site description',
    pageFavicon: 'Favicon',
    rootFontSize: 'Global Font Size',
    fontFaceName: 'Name',
    fontFaceSrc: 'Source',
    fontFaceStyle: 'Style',
    fontFaceWeight: 'Weight',
    fontFaceLink: 'Link',
    addFontFace: 'Add FontFace',
    colorVariableName: 'Name',
    colorVariableColor: 'Color',
    redirectLoading: 'Redirection in progress...',
    pageNotFound: 'Page Not Found',
    backToHome: 'Back to Home',
    createTemplateTip: 'Whether to use this template to create a new project',
    newProject: 'New Project',
    notSaveDataTip: 'Do you have data that is still unsaved from the last edit and are you restoring it?',
    pageGlobalSetting: 'Page Setting',
    fontSetting: 'Font Setting',
    shortcut: 'Shortcut',
    material: 'Material',
  }
}

export const lang: 'zh' | 'en' =
    location.search.indexOf('lang=en') > -1
      ? 'en'
      : navigator.language.toLowerCase().startsWith('zh') ? 'zh' : 'en'

setLang(lang)

export const $t = (key: keyof typeof i18nText['zh'], ...args: (string | number)[]) => {
  const str = i18nText[lang][key]
  if (args.length) {
    return str.replace(/\{(\d+)\}/g, (_, index) => args[index] as string)
  }
  return str
}